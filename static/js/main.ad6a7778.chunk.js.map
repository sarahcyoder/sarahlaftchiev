{"version":3,"sources":["files/resume.pdf","img/woman-programmer.png","Header.js","Project.js","Body.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","useEffect","typeHelloWorld","i","text","length","document","getElementById","innerHTML","setTimeout","className","href","id","Project","title","url","label","target","rel","Resume","src","icon","alt","Footer","App","Body","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,8C,iJC8B5BC,G,YA5BA,WACbC,qBAAU,WACRC,OAGF,IAAIC,EAAI,EACFD,EAAiB,SAAjBA,IACJ,IAAME,EAAO,sCAETD,EAAIC,EAAKC,SACXC,SAASC,eAAe,cAAcC,WAAaJ,EAAKD,GACxDA,IACAM,WAAWP,EAAgB,MAI/B,OACE,yBAAKQ,UAAU,mBACb,yBAAKA,UAAU,WACb,uBAAGC,KAAK,mCAAR,iBAEF,wDACA,yBAAKC,GAAG,eACR,kD,gCCbSC,EAVC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,MAE7B,OACE,yBAAKN,UAAU,WACb,4BAAMI,GACN,2BAAG,uBAAGH,KAAOI,EAAME,OAAO,SAASC,IAAI,uBAAuBF,MCiCrDhB,EAnCA,WAEb,OACE,yBAAKU,UAAU,iBACb,uDACA,kBAAC,EAAD,CACEI,MAAM,6BACNC,IAAI,gDACJC,MAAM,qBAER,kBAAC,EAAD,CACEF,MAAM,0EACNC,IAAI,gDACJC,MAAM,qBAER,kBAAC,EAAD,CACEF,MAAM,mDACNC,IAAI,4DACJC,MAAM,qBAER,yBAAKN,UAAU,WACb,2EACA,sCAAW,uBAAGC,KAAK,0BAA0BM,OAAO,SAASC,IAAI,uBAAtD,cAAX,QAA0G,uBAAGP,KAAK,uBAAuBM,OAAO,SAASC,IAAI,uBAAnD,aAE5G,yBAAKR,UAAU,cACb,0CACA,2BAAG,uBAAGC,KAAMQ,IAAQF,OAAO,SAASC,IAAI,uBAArC,WACH,2BAAG,uBAAGP,KAAK,iCAAiCM,OAAO,SAASC,IAAI,uBAA7D,WACH,2BAAG,uBAAGP,KAAK,2CAA2CM,OAAO,SAASC,IAAI,uBAAvE,cAEL,yBAAKE,IAAKC,IAAMC,IAAI,4BCvBXC,EAVA,WAEb,OACE,yBAAKb,UAAU,mBACb,gFACA,6DCWSc,MAZf,WACE,OACE,yBAAKd,UAAU,OACb,4BAAQA,UAAU,cACjB,kBAAC,EAAD,OAED,kBAACe,EAAD,MACA,kBAAC,EAAD,QCDcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAAS1B,SAASC,eAAe,SD6H3C,kBAAmB0B,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.ad6a7778.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/resume.d43bffef.pdf\";","module.exports = __webpack_public_path__ + \"static/media/woman-programmer.5c89d2f6.png\";","import React, { useEffect } from 'react';\n\nconst Header = () => {\n  useEffect(() => {\n    typeHelloWorld();\n  },);\n\n  let i = 0;\n  const typeHelloWorld = () => {\n    const text = \"And I can even make it look pretty.\";\n    // move through each letter to text and repeat function until finished\n    if (i < text.length) {\n      document.getElementById(\"typedIntro\").innerHTML += text[i];\n      i++;\n      setTimeout(typeHelloWorld, 60);\n    }\n  }\n\n  return (\n    <div className=\"headerContainer\">\n      <div className=\"contact\">\n        <a href=\"mailto:sarahlaftchiev@gmail.com\">Get in Touch</a>\n      </div>\n      <h1>Building Better Software</h1>\n      <div id=\"typedIntro\"></div>\n      <h2>Sarah Laftchiev</h2>\n    </div>\n  )\n}\n\nexport default Header;\n","import React from 'react';\n\nconst Project = ( {title, url, label} ) => {\n\n  return (\n    <div className=\"project\">\n      <h3>{ title }</h3>\n      <p><a href={ url } target=\"_blank\" rel=\"noopener noreferrer\">{label}</a></p>\n    </div>\n  )\n}\n\nexport default Project;\n","import React from 'react';\nimport Resume from './files/resume.pdf';\nimport icon from './img/woman-programmer.png';\nimport Project from './Project.js';\n\nconst Header = () => {\n\n  return (\n    <div className=\"bodyContainer\">\n      <h2>Things I've Done Lately</h2>\n      <Project\n        title=\"This website, a React app.\"\n        url=\"https://github.com/sarahcyoder/sarahlaftchiev\"\n        label=\"See it on GitHub\"\n      />\n      <Project\n        title=\"A portfolio for my husband, created with Gatsby and a Drupal 8 backend.\"\n        url=\"https://github.com/sarahcyoder/emil-laftchiev\"\n        label=\"See it on GitHub\"\n      />\n      <Project\n        title=\"Contributed to thirdandgrove.com, a Gatsby site.\"\n        url=\"https://github.com/thirdandgrove/thirdandgrove-com-gatsby\"\n        label=\"See it on GitHub\"\n      />\n      <div className=\"project\">\n        <h3>Dozens of other projects at Third and Grove</h3>\n        <p>Such as <a href=\"https://www.draper.com/\" target=\"_blank\" rel=\"noopener noreferrer\">draper.com</a> and <a href=\"https://www.wvi.org/\" target=\"_blank\" rel=\"noopener noreferrer\">wvi.org</a></p>\n      </div>\n      <div className=\"learn-more\">\n        <h2>Learn More</h2>\n        <p><a href={Resume} target=\"_blank\" rel=\"noopener noreferrer\">Resume</a></p>\n        <p><a href=\"https://github.com/sarahcyoder\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a></p>\n        <p><a href=\"https://www.linkedin.com/in/sarahcyoder/\" target=\"_blank\" rel=\"noopener noreferrer\">LinkedIn</a></p>\n      </div>\n      <img src={icon} alt=\"Engineering software.\" />\n    </div>\n  )\n}\n\nexport default Header;\n","import React from 'react';\n\nconst Footer = () => {\n\n  return (\n    <div className=\"footerContainer\">\n      <h2>Thanks for scrolling! I'd love to hear from you.</h2>\n      <h3>sarahlaftchiev[at]gmail.com</h3>\n    </div>\n  )\n}\n\nexport default Footer;\n","import React from 'react';\nimport './App.css';\nimport Header from './Header.js';\nimport Body from './Body.js';\nimport Footer from './Footer.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n       <Header />\n      </header>\n      <Body />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}